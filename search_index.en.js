window.searchIndex = {"fields":["title","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"0":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2,"u":{"docs":{},"df":0,"8":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"1":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5,".":{"docs":{},"df":0,"0":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}},"4":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1},"7":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"2":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":5,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"3":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3,"2":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":2},"3":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"4":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2},"5":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1},"6":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1},"7":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1},"8":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"9":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1},":":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"9":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"_":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0}},"df":3,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}}}}}},"a":{"docs":{},"df":0,".":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}},"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1,"i":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0}},"df":1}}}}},"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}},"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":3,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907}},"df":1}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.47213595499958},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.1622776601683795}},"df":2,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}},"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"1":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1},"2":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1},"3":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"5":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":5.5677643628300215},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1,"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"k":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1},"w":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":6}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":3}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"k":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":3}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"z":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4}}},"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":4.358898943540674}},"df":2}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":2,"c":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.449489742783178}},"df":1}},"y":{"docs":{},"df":0,"[":{"docs":{},"df":0,"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"_":{"docs":{},"df":0,"]":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2}}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":2,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}}}}}},"t":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772}},"df":1,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}}},"w":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}},"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.872983346207417},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0}},"df":2,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"3":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1},"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795}},"df":1}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}},"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4,"5":{"docs":{},"df":0,"8":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0}},"df":2}}}},"e":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979}},"df":1}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907}},"df":1}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.1622776601683795}},"df":1}}}}}},"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979}},"df":1}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772}},"df":4},"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.6457513110645907}},"df":1,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}},"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.3166247903554},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}},".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":5.0990195135927845},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3}}}},"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":4}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":5},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"\"":{"docs":{},"df":0,"2":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"d":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.123105625617661},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":3.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"_":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}},"u":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":2}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}}}},"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.3166247903554},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":4},"x":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1},"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903}},"df":1}}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":2}}}},"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":3}},"r":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":6}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}},"f":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":5.0}},"df":1,"^":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0}},"df":1}}}}},"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}},"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0}},"df":3}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":4.242640687119285},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0}},"df":1}}}}}}}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":4,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"_":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":3.3166247903554}},"df":1,"'":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":4.0}},"df":5,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4}}}}},"x":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.6457513110645907}},"df":1}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":4,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":4.123105625617661}},"df":1}}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"q":{"docs":{},"df":0,"q":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":5.5677643628300215}},"df":1}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.605551275463989}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}}}},"b":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1},"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}},"f":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":7.681145747868608},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.3166247903554},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.449489742783178}},"df":3,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":3.1622776601683795}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.449489742783178}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"#":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":3}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":4.242640687119285},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.6457513110645907}},"df":3}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":2}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":2}}},"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.605551275463989}},"df":1,"'":{"docs":{},"df":0,"^":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"^":{"docs":{},"df":0,"?":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}},"^":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.605551275463989}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.7416573867739413}},"df":1}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":4.358898943540674},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":2,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":2}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4}},"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3}},"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}},"s":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":2}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}},".":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":4}},"s":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":9.273618495495704}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":7.615773105863909},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"[":{"docs":{},"df":0,"+":{"docs":{},"df":0,"a":{"docs":{},"df":0,",":{"docs":{},"df":0,"+":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.0}},"df":1}}}}},"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.4641016151377544}},"df":1}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903}},"df":3,"e":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":3}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":4.69041575982343},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":3.872983346207417}},"df":2},"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":3.872983346207417},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}},"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"q":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907}},"df":1,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1},"3":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1},"4":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":6.082762530298219},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{},"df":0,"(":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.872983346207417},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772}},"df":4}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"[":{"docs":{},"df":0,"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":5}}},"o":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":2},"s":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":2}},"r":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772}},"df":1}}}}}}},"f":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":2,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"2":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}},"[":{"docs":{},"df":0,"+":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1,",":{"docs":{},"df":0,"+":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}},"1":{"docs":{},"df":0,",":{"docs":{},"df":0,"+":{"docs":{},"df":0,"a":{"docs":{},"df":0,"2":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"\\":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1},"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907}},"df":1,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795}},"df":1,"]":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"b":{"docs":{},"df":0,"]":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4}}}},"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":4.242640687119285},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":4,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"8":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{},"df":0,"x":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903}},"df":1,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}},"|":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}},"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":4}},"d":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1},"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":6,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.6457513110645907}},"df":2,"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1,"[":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1},"b":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":3},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1,"[":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1},"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979}},"df":1}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}},"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.3166247903554},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":4,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.1622776601683795}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.6457513110645907}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"#":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.3166247903554},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":6.082762530298219}},"df":2,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1}}}}}}}}}},".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"x":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":3.3166247903554}},"df":3,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795}},"df":1}}}}}}}}}}}}}},"[":{"docs":{},"df":0,"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.8284271247461903}},"df":1}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.8284271247461903}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.3166247903554}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.3166247903554}},"df":1}}}}}}},"[":{"docs":{},"df":0,"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}},"h":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.47213595499958},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":4.123105625617661},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":5.744562646538029},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":4.795831523312719},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":8.54400374531753},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":3.605551275463989},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":4.242640687119285},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":3.4641016151377544}},"df":6,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":1}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":4.358898943540674}},"df":1}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":3}},"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.4641016151377544},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.449489742783178}},"df":1}}}},"l":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":5}},"r":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":6,"'":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":1},"’":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":1}}}}}}},"s":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2}},"/":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2},"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.6457513110645907}},"df":2,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}},"f":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178}},"df":1}},"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}}}}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":3.0}},"df":6,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.123105625617661},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":5.0990195135927845},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":4}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":2}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.8284271247461903}},"df":1}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}},"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.242640687119285},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"r":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":3},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":5.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":4}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":3}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.69041575982343},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":5.477225575051661}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3}}}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2},"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":3}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1},"h":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":4.47213595499958}},"df":2}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"k":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"y":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3,"^":{"docs":{},"df":0,".":{"docs":{},"df":0,"_":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.242640687119285},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":2}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}}},"y":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":3}}}}},"r":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}},"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2},"k":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1},"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}},"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":2,"'":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.7416573867739413}},"df":2}}}}},"f":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907}},"df":1}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.0}},"df":1,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}},".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"5":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"6":{"docs":{},"df":0,"6":{"docs":{},"df":0,"8":{"docs":{},"df":0,"3":{"docs":{},"df":0,"6":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"g":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":5.5677643628300215}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.0}},"df":1}}}},"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3},"p":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.872983346207417},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.0}},"df":3,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}},"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,":":{"docs":{},"df":0,"5":{"docs":{},"df":0,":":{"docs":{},"df":0,"1":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"m":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":4.795831523312719},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2,"0":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":1},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":4.898979485566356}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":3}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}},"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2,"[":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1},"b":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4}},"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":2},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}},"x":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":2}}},"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.872983346207417}},"df":2}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3}}}}},"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":2}}}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"x":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":4.69041575982343},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.605551275463989}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":6}},"v":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1}}},"s":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.7416573867739413}},"df":1}},"t":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":2}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":2}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.6457513110645907}},"df":3}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.3166247903554},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":4}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":4.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5}},"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"3":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.8284271247461903}},"df":5,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":2}},"t":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}}},"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979}},"df":2},"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":3},"f":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.605551275463989}},"df":1}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"w":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":2,"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"^":{"docs":{},"df":0,"2":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}},"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.58257569495584},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":1}},"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1}}}}}}}}}}}},"c":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907}},"df":2},"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.872983346207417},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.8284271247461903}},"df":4}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":1},"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"[":{"docs":{},"df":0,"+":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.872983346207417}},"df":1}},"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178}},"df":1},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.898979485566356}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.872983346207417}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"]":{"docs":{},"df":0,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":3}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":4,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":2,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.123105625617661}},"df":1}}}}}}},"p":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0}},"df":2,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"`":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.605551275463989},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"|":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":4,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":3,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":3}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"y":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"u":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"o":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":3.3166247903554}},"df":2,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.6457513110645907}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0}},"df":1}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":1,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":2,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":5,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.449489742783178}},"df":2}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1}}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":2,"l":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"n":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}},"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}}},"c":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":3.4641016151377544}},"df":1}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}}},"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.69041575982343},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":4.69041575982343},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}},".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}},"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.0}},"df":1,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}},"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{},"df":0,"[":{"docs":{},"df":0,"f":{"docs":{},"df":0,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.872983346207417},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":5}}}}},"u":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.1622776601683795}},"df":2},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979}},"df":1}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.7320508075688772}},"df":1}}}},"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":3,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"2":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"d":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.449489742783178}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":2}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":2}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":2}}}}}}},"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":4}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":2}}}},"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.449489742783178}},"df":2}}}}}},"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}},"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178}},"df":1,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}},"4":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{},"df":0,"7":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"c":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"3":{"docs":{},"df":0,"8":{"docs":{},"df":0,"5":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}},"7":{"docs":{},"df":0,"4":{"docs":{},"df":0,"6":{"docs":{},"df":0,"9":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{},"df":0,"6":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}}}}},"d":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"8":{"docs":{},"df":0,"4":{"docs":{},"df":0,"9":{"docs":{},"df":0,"5":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"2":{"docs":{},"df":0,"7":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}},"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"8":{"docs":{},"df":0,"6":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"f":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"2":{"docs":{},"df":0,"9":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}},"g":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"7":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{},"df":0,"7":{"docs":{},"df":0,"3":{"docs":{},"df":0,"3":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"4":{"docs":{},"df":0,"8":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,"9":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}},"h":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"9":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"9":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{},"df":0,"6":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"7":{"docs":{},"df":0,"4":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}},"2":{"docs":{},"df":0,"9":{"docs":{},"df":0,"9":{"docs":{},"df":0,"7":{"docs":{},"df":0,"9":{"docs":{},"df":0,"4":{"docs":{},"df":0,"6":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"j":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{},"df":0,"4":{"docs":{},"df":0,"3":{"docs":{},"df":0,"7":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}},"9":{"docs":{},"df":0,"5":{"docs":{},"df":0,"5":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.7416573867739413}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795}},"df":1,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178}},"df":1}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}},"v":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979}},"df":1}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}},"f":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}},"e":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":3,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}}}}},"q":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979}},"df":3,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":4.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.242640687119285},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.605551275463989},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":3.4641016151377544}},"df":4,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"[":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"8":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}},"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":4.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.4641016151377544}},"df":4}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"s":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":2}}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.4641016151377544}},"df":3,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979}},"df":1,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"3":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":3,"'":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}}}}}},"3":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":1},"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":4}},"y":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}},"b":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.3166247903554}},"df":1,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178}},"df":1}}},".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,",":{"docs":{},"df":0,"?":{"docs":{},"df":0,"]":{"docs":{},"df":0,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}},"p":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":2,"(":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4,"k":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2},"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2},"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}},"f":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1},"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1},"v":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":5,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903}},"df":1}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":2}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.872983346207417},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907}},"df":1}},"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"z":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4}},"v":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":3}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"y":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.1622776601683795}},"df":2}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"f":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":3,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}},"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979}},"df":2}},"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":4.358898943540674}},"df":3,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.23606797749979}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":2}}}}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}},"y":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}},"d":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"!":{"docs":{},"df":0,"(":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"8":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":3.3166247903554}},"df":4}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":2}},"e":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.0}},"df":1}}}}},"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":3}}}}}}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.605551275463989},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":3.872983346207417}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":4,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":3.1622776601683795}},"df":3}}}}}},"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":2}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":3,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}}}},"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}},"n":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"x":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4}}}}}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3,"[":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.605551275463989},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":3}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}},"l":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":4}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":3}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.23606797749979}},"df":3,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{},"df":0,"+":{"docs":{},"df":0,"a":{"docs":{},"df":0,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":1}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.7416573867739413}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":4},"k":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772}},"df":1}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"8":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"(":{"docs":{},"df":0,"0":{"docs":{},"df":0,"x":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"k":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,":":{"docs":{},"df":0,":":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":3.0}},"df":2}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}}}}}},"u":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"b":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"(":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,";":{"docs":{},"df":0,"'":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.23606797749979}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":3,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":1}}}}}}}}}}},"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1},"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.6457513110645907}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2,"'":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":4.358898943540674}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":3},"u":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":2}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":6.855654600401044},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.3166247903554},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":6,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.3166247903554}},"df":2}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":2}},"8":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.7320508075688772}},"df":2},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":4}}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.8284271247461903}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951}},"df":1}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903}},"df":1}},"q":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178}},"df":1,"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979}},"df":1}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":3}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":2}}}}},"p":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":3}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":1,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1,"u":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.6457513110645907}},"df":1}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.47213595499958},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":4.242640687119285},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":4.58257569495584},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":3.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":6,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}},"g":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":4.47213595499958},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.3166247903554},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.7416573867739413},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":4,")":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},"d":{"docs":{},"df":0,"b":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.8284271247461903}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":5.5677643628300215},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":3.3166247903554}},"df":2,"\"":{"docs":{},"df":0,")":{"docs":{},"df":0,")":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}},"(":{"docs":{},"df":0,"1":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1,"4":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"2":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}},".":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.7416573867739413}},"df":1}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,")":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.6457513110645907}},"df":1},"p":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.449489742783178}},"df":1,"[":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"[":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1,"[":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}},"]":{"docs":{},"df":0,"(":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"_":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}},"v":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795}},"df":1,"u":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":3.1622776601683795},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":2.449489742783178},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"u":{"docs":{},"df":0,"8":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}},":":{"docs":{},"df":0,":":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2,"f":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1,"i":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"w":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.4142135623730951}},"df":1}}}}},"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":2,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1,"r":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.6457513110645907}},"df":1,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":2.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.449489742783178}},"df":3}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"y":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":3}},"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":1},"v":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":2}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0}},"df":1}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":2.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.4142135623730951}},"df":5}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.4142135623730951},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.7320508075688772}},"df":4}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"p":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":2.23606797749979},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":3,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}}},"x":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.4142135623730951}},"df":2,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.7320508075688772},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":3.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.7320508075688772}},"df":3}}},".":{"docs":{},"df":0,"x":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}}}}},"y":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":2.0}},"df":1}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}},"z":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}},"title":{"root":{"docs":{},"df":0,"1":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1},"2":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"tf":1.0},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"tf":1.0},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"tf":1.0}},"df":2}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"q":{"docs":{},"df":0,"l":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"tf":1.0}},"df":1}}}}},"documentStore":{"save":true,"docs":{"https://jproyo.github.io/":{"body":"","id":"https://jproyo.github.io/","title":""},"https://jproyo.github.io/posts/":{"body":"","id":"https://jproyo.github.io/posts/","title":"Articles"},"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"body":"Source Code\nTo get a complete version of the source code presented here, go here Github Repo.\n\nAll the examples of this post can be found on demo-end branch and NOT in master\n\nDisclaimer\nAll the techniques and code that is going to be shown here are completely agnostic of any library. We are not going to use any Scala FP library such as cats, scalaz or any other. Obviously using any of those libraries could help us to implement these techniques without needing to write so much code, but the goal here is to shown how we can implement Tagless Final Encoding using only pure Scala language features.\nIntroduction\nThis is my first blog post about Scala and i would like to describe a well known topic for the whole Scala FP community which is Tagless Final Encoding.\nThere are so many great code examples and blog post about the subject around there, but since there is always room to understand the technique from other perspective, I decided to take the chance and maybe help others to understand it in a more practical point of view.\nI am going to deep dive in the technique with a real use case example and in the middle i will mix it with more theoretical concepts. This journey is going to start from an imperative approach until we get to a Tagless Final FP approach. So, fasten your seat belts and lets enjoy the ride!!!\nProblem example\nI've created an example problem to be solved based on some things of my personal work, so everything in the example could be real production code. This is obviously a minimalist version of the problem.\nWe are going to describe a Recommender Program that given an algorithm and a user is going to generate recommendations for that user based on the selected algorithm. A Recommender system could be for example the most likely recommendations you received when visit any Marketplace such as Amazon, Ebay, or any other after searching for some products and navigate through these sites. For example: \"Since you have been searching for X cars, maybe you are interested in R, Y and Z also\".\nWe have the following requirements defined in terms of User Stories:\n\n\nAs an user i want to get recommendations from an specific algorithm, but if there are no recommendations for this algorithm or i forgot to specify what algorithm should be use i would like to have default recommendations from the best algorithm the system has.\n\n\nAs an user i want to get a message if recommendation's algorithm i requested is wrong.\n\n\nAs an user i want to be able to be retrieve with a limited number of recommendations.\n\n\nImperative approach\n\n  import DataSource._\n\n  def getUser(userId: Option[Int]): Option[Int] =\n    userId.filter(user =&gt; users.exists(_.userId == user))\n\n  def getAlgorithm(recommenderId: Option[String]): Option[Algorithm] =\n    recommenderId.orElse(algoDefault).flatMap(algorithms.get(_))\n\n\n  def program(userId: Option[Int],\n                recommenderId: Option[String] = None,\n                limit: Option[Int] = None): Unit = {\n\n\n      val user = getUser(userId)\n\n      val algorithm = getAlgorithm(recommenderId)\n\n      val result = algorithm.flatMap(_.run(UserId(user.get)))\n                            .orElse(Some(emptyRecs(user.get)))\n\n      val limitFilter = limit.getOrElse(limitDefault)\n\n      val resultFiltered =\n                result.map(_.copy(recs = recs.slice(0, limitFilter).toList))\n\n      resultFiltered match {\n        case Some(recs) =&gt; {\n          println(s\"\\nRecommnedations for userId ${recs.userId}...\")\n          println(s\"Algorithm ${algorithm.get.name}\")\n          println(s\"Recs: ${recs.recs}\")\n        }\n        case None =&gt; println(s\"No recommendations found for userId $userId\")\n      }\n\n  }\n\n\nAlthough this imperative code version is fine, we can take the advantage of for-comprehension syntax sugar since we are manipulating Option[+A] type.\n\n  def program(userId: Option[Int],\n              recommenderId: Option[String] = None,\n              limit: Option[Int] = None): Unit = {\n\n    val result = for {\n      user           &lt;- getUser(userId)\n      algorithm      &lt;- getAlgorithm(recommenderId)\n      result         &lt;- algorithm.run(UserId(user))\n      limitFilter     = limit.getOrElse(limitDefault)\n      resultFiltered  = result.copy(recs = recs.slice(0, limitFilter).toList)\n    } yield Result(algorithm, resultFiltered)\n\n    result match {\n      case Some(algoRes) =&gt; {\n        println(s\"\\nRecommnedations for userId ${algoRes.recs.userId}...\")\n        println(s\"Algorithm ${algoRes.algorithm.name}\")\n        println(s\"Recs: ${algoRes.recs.recs}\")\n      }\n      case None =&gt; println(s\"No recommendations found for userId $userId\")\n    }\n\n  }\n\n\nWe can even go further and separate our program in 2 functions:\n\ngetRecommendations: for-comprehension where the program logic takes place\nprintResults: print results or errors to the user.\n\n\n\n  def getRecommendations(userId: Option[Int],\n                         recommenderId: Option[String],\n                         limit: Option[Int]): Option[Result] = {\n    val result = for {\n      user           &lt;- getUser(userId)\n      algorithm      &lt;- getAlgorithm(recommenderId)\n      result         &lt;- executeAlgorithm(user, algorithm)\n      limitFilter     = limit.getOrElse(limitDefault)\n      resultFiltered &lt;- filterResults(result, limitFilter)\n    } yield Result(algorithm, resultFiltered)\n    result\n  }\n\n\n  def printResults(userId: Option[Int], result: Option[Result]): Unit = {\n    result.fold(println(s\"No recommendations found for userId $userId\"))(algoRes =&gt; {\n      println(s\"\\nRecommnedations for userId ${algoRes.recs.userId}...\")\n      println(s\"Algorithm ${algoRes.algorithm.name}\")\n      println(s\"Recs: ${algoRes.recs.recs}\")\n    })\n  }\n\n  private def getUser(userId: Option[Int]): Option[UserId] =\n  userId.filter(user =&gt; users.exists(_.userId == user)).map(UserId)\n\n  private def getAlgorithm(recommenderId: Option[String]): Option[Algorithm] =\n  recommenderId.orElse(algoDefault).flatMap(algorithms.get(_))\n\n  private def executeAlgorithm(user: UserId, algorithm: Algorithm): Option[UserRec] =\n    algorithm.run(user)\n\n  private def filterResults(result: UserRec, limitFilter: Int): Option[UserRec] =\n    Some(result.copy(recs = recs.slice(0, limitFilter).toList))\n\n\nNow we are done with our imperative code style and we can say it is in a good shape.\nBut we don't like imperative style, we love doing Functional Programming and applying all the Math science we have at our disposal, don't we? So, lets start to refactor our code with Tagless Final Encoding approach.\nTagless Final Encoding\nTagless Final Encoding is a technique for embedding a DSL (Domain Specific Language) in a Type Functional Language such as Scala, Haskell, OCaml or other similar. Since we are embedding a DSL (a.k.a. Language) we are defining a Language in order to use its syntax and semantic (Algebra) in our program. We are defining also an interpreter of the Language to indicate how it should behave on each used term (Interpreter).\n\nIf you want to visit a more advanced approach of this, I would strongly recommend after this lecture to take a look on Free Monads.\n\nWe can say that in Tagless Final style there are:\n\n\nAlgebras: Set of operations over a Structure. In a Programming language idiom could be a set of functions that operates over some Type.\n\n\nInterpreter: The way of those operations behave according to an specific Type. In a Programming language idiom the implementation of those functions depending on the specific Type.\n\n\nAlgebras\nThe first thing to do with this technique is to define our Algebras, our operations that are needed to solve our domain problem. If you already have some program in a good shape but with an imperative style approach like describe it above, it is quite easy to define these operations because it is already provided by the semantic of the for-comprehension. In our case we have the following operations:\n\n  def getUser(..)\n\n  def getAlgorithm(..)\n\n  def executeAlgorithm(..)\n\n  def filter(...)\n\n\nNow the only thing left to build our Algebra is to group those operation in different Algebras depending on the structure they are operating on:\n\nUser: operations related to handle users\nAlgorithm: operations related to handle algorithms\nFilter: operation for filtering results\n\nSince our Algebras are only definition of our operations we are going to use Trait for defining this abstract representation.\n\n  object algebras {\n\n    import DataSource._\n\n    trait UserRepo[F[_]] {\n      def getUser(userId: Option[Int]): F[UserId]\n    }\n\n    object UserRepo {\n      def apply[F[_]](implicit UserR: UserRepo[F]): UserRepo[F] = UserR\n    }\n\n    trait Filter[F[_]] {\n      def filter(userRec: UserRec, limit: Int): F[UserRec]\n    }\n\n    object Filter {\n      def apply[F[_]](implicit Fil: Filter[F]): Filter[F] = Fil\n    }\n\n    trait AlgorithmRepo[F[_]] {\n      def getAlgorithm(recommenderId: Option[String]): F[Algorithm]\n      def execute(algo: Algorithm, userId: UserId): F[UserRec]\n    }\n\n    object AlgorithmRepo {\n      def apply[F[_]](implicit Algo: AlgorithmRepo[F]): AlgorithmRepo[F] = Algo\n    }\n\n  }\n\n\nHere we have a couple of things perhaps new for the reader:\n\n\nWe are defining our Algebras in Traits. So far so good. Nothing new or fancy.\n\n\nWe are defining our Types with Higher-Kinded Types parameters (F[_]) to abstract out the Container Structure that it is going to be use in each Interpreter. A Higher-Kinded Type or Type Constructor is a Type which constructs a new Type based on a Type Parameter. For example Option[+A] is a Type constructor which takes a Type, for example String and constructs the final Type, for example Option[String]. You can probe this in a Scala console with :kind command:\n\n\nscala&gt; :k String\nString's kind is A\n\nscala&gt; :k Option\nOption's kind is F[+A]\n\nscala&gt; :k Option[String]\nOption[String]'s kind is A\n\n\nA last thing we are adding here in companion objects are a technique called Summoned values, which allow us to get the implicit value using the Companion Object Trait's constructor.\n\nWith all this machinery in place we can add some utility functions to avoid calling companion objects and just calling functions from the client program:\n\n  def getUser[F[_]: UserRepo](userId: Option[Int]): F[UserId] =\n    UserRepo[F].getUser(userId)\n\n  def filter[F[_]: Filter](userRec: UserRec, limit: Int): F[UserRec] =\n    Filter[F].filter(userRec, limit)\n\n  def getAlgorithm[F[_]: AlgorithmRepo](recommenderId: Option[String]): F[Algorithm] =\n    AlgorithmRepo[F].getAlgorithm(recommenderId)\n\n  def execute[F[_]: AlgorithmRepo](algo: Algorithm, userId: UserId): F[UserRec] =\n    AlgorithmRepo[F].execute(algo, userId)\n\n\nNow it is time to use our Algebras from getRecommendations program. In order to do that we are going to use Context Bounds allowing the compiler to infer implicit values from context.\n\n  def getRecommendations[F[_]: UserRepo: AlgorithmRepo: Filter]\n      ( userId: Option[Int],\n        recommenderId: Option[String],\n        limit: Option[Int]): Option[Result] = {\n    for {\n      user           &lt;- getUser(userId)\n      algorithm      &lt;- getAlgorithm(recommenderId)\n      result         &lt;- execute(user, algorithm)\n      limitFilter     = limit.getOrElse(limitDefault)\n      resultFiltered &lt;- filter(result, limitFilter)\n    } yield Result(algorithm, resultFiltered)\n  }\n\n\nAlgebra's Interpreter\nAlthough it seems we have arrived to an acceptable solution we are not ready yet. We need to have at least one interpreter which is the real implementation of our Algebra. Recall that we are resting everything on Option[+A] for the moment, so our interpreter should be on Option[+A] Type.\nOne possible interpreter could be:\n  object interpreter {\n\n    import DataSource._\n    import algebras._\n\n    implicit object UserRepoOption extends UserRepo[Option] {\n      override def getUser(userId: Option[Int]): Option[UserId] =\n        userId.filter(user =&gt; users.exists(_.userId == user)).map(UserId)\n    }\n\n    implicit object AlgorithmRepoOption extends AlgorithmRepo[Option]{\n      override def getAlgorithm(recommenderId: Option[String]): Option[Algorithm] =\n        recommenderId.orElse(algoDefault).flatMap(algorithms.get(_))\n\n      override def execute(algo: Algorithm, userId: UserId): Option[UserRec] =\n        algo.run(userId)\n    }\n\n    implicit object FilterOption extends Filter[Option] {\n      override def filter(userRec: UserRec, limit: Int): Option[UserRec] =\n        Some(userRec.copy(recs = recs.slice(0, limit).toList))\n    }\n\n  }\n\nWe need to do for letting the compiler infer the implicit values it is just importing our implicit values on the context.\n\n  import DataSource._\n  import algebras._\n\n  def program(userId: Option[Int],\n              recommenderId: Option[String] = None,\n              limit: Option[Int] = None): Unit = {\n\n   import interpreter._\n\n   val result: Option[Result] = getRecommendations[Option](userId, recommenderId, limit)\n\n   printResults(userId, result)\n\n  }\n\n\nHave you notice that we are calling getRecommendations with Option[+A] as the Higher-Kinded Type or Type Constructor?. Since we have indicated in getRecommendations that F[_] is context bounded by UserRepo and AlgorithmRepo and Filter, and\n$$ F[\\_] \\cong Option[+A] $$\nthe compiler should look for an implicit value for each Algebras whose F is Option[+A]. And that is what exactly we have provided to the compiler. But is this code compile and runs or only runs? Lets check\nλx.x&gt; $ sbt run\n[error] value flatMap is not a member of type parameter F[program.DataSource.UserId]\n[error]       user           &lt;- getUser(userId)\n[error]                                ^\n[error] value flatMap is not a member of type parameter F[program.DataSource.Algorithm]\n[error]       algorithm      &lt;- getAlgorithm(recommenderId)\n[error]                                     ^\n[error] two errors found\n\nWhy is this happening? Because getRecommendations is Context Bound or Constrained on UserRepo: AlgorithmRepo: Filter and for-comprehension in Scala is only a syntactic sugar for flatMap, map and withFilter. Of course Option[+A] type implements those methods and can be used in a for-comprehension syntax, but for-comprehension used on getRecommendations doesn't know anything about Option[+A] or any other Type until it is bound in program function.\n\nRemember as i mentioned in Disclaimer section that we are not using any extra FP library to do the job. If we are using cats or scalaz we can easily Constraint getRecommendations with FlatMap or Monad Typeclasses\n\nProgram Syntax: For-Comprehension aware\nWe need a way to tell the compiler that getRecommendations supports for-comprehension syntax. We can do that creating an Algebra to support that syntax.\n\nI would like to point out that this part of the code is inspired on John De Goes Talk FP to the Max and i would strongly encourage you to watch this video.\n\n\nIn our Algebra we are going to have this:\n\n  trait Program[F[_]] {\n    def flatMap[A, B](fa: F[A], afb: A =&gt; F[B]): F[B]\n    def map[A, B](fa: F[A], ab: A =&gt; B): F[B]\n  }\n\n  object Program {\n    def apply[F[_]](implicit F: Program[F]): Program[F] = F\n  }\n\n  implicit class ProgramSyntax[F[_], A](fa: F[A]) {\n    def map[B](f: A =&gt; B)(implicit F: Program[F]): F[B] = F.map(fa, f)\n    def flatMap[B](afb: A =&gt; F[B])(implicit F: Program[F]): F[B] = F.flatMap(fa, afb)\n  }\n\n\n\nAn in our Interpreter we need resolution bind for Option[+A]:\n\n  implicit object ProgramOption extends Program[Option] {\n    override def flatMap[A, B](fa: Option[A], afb: A =&gt; Option[B]): Option[B] =\n        fa.flatMap(afb)\n\n    override def map[A, B](fa: Option[A], ab: A =&gt; B): Option[B] = fa.map(ab)\n\n  }\n\n\nLast thing to do is to add Program Constraint to getRecommendations:\n\n  def getRecommendations[F[_]: UserRepo: AlgorithmRepo: Filter: Program]\n      (userId: Option[Int],\n       recommenderId: Option[String],\n       limit: Option[Int]): F[Result] = {\n    for {\n    ....\n    }\n  }\n\nNow the code compiles and run!!\nPrinting results: The right way\nRecalling to our printing results function. In this case our fold over result is working because we are expecting an Option[+A] result, but getRecommendations is agnostic in that sense and printResults should also be.\n  def printResults[F[_]: Program](userId: Option[Int], result: F[Result]): Unit = {\n    result.fold[AppError, Unit](error =&gt; println(s\"Error $error\"), algoRes =&gt; {\n      println(s\"\\nRecommnedations for userId ${algoRes.recs.userId}...\")\n      println(s\"Algorithm ${algoRes.algorithm.name}\")\n      println(s\"Recs: ${algoRes.recs.recs}\")\n    })\n  }\n\nThis is a better version but our program doesn't compile because Program Algebra doesn't have defined a fold operation. So lets do it:\n  trait Program[F[_]] {\n    def flatMap[A, B](fa: F[A], afb: A =&gt; F[B]): F[B]\n    def map[A, B](fa: F[A], ab: A =&gt; B): F[B]\n    def fold[A, B, C](fa: F[A], first: B =&gt; C, second: A =&gt; C): C\n  }\n\n  object Program {\n    def apply[F[_]](implicit Prog: Program[F]): Program[F] = Prog\n  }\n\n  implicit class ProgramSyntax[F[_], A](fa: F[A]) {\n\n    def map[B](f: A =&gt; B)(implicit Prog: Program[F]): F[B] =\n      Prog.map(fa, f)\n\n    def flatMap[B](afb: A =&gt; F[B])(implicit Prog: Program[F]): F[B] =\n      Prog.flatMap(fa, afb)\n\n    def fold[B, C](first: B =&gt; C, second: A =&gt; C)(implicit Prog: Program[F]): C =\n      Prog.fold(fa, first, second)\n  }\n\nNow we have defined our fold operation which is going to fold over F. It is time to add the interpretation of this operation:\n  implicit object ProgramOption extends Program[Option] {\n    override def flatMap[A, B](fa: Option[A], afb: A =&gt; Option[B]): Option[B] =\n      fa.flatMap(afb)\n\n    override def map[A, B](fa: Option[A], ab: A =&gt; B): Option[B] = fa.map(ab)\n\n    override def fold[A, B, C](fa: Option[A], first: B =&gt; C, second: A =&gt; C): C =\n      fa.fold(first(UnknownError.asInstanceOf[B]))(second(_))\n\n  }\n\nThe code compiles and runs again with an abstract version of printResults. Lets see some examples:\nλx.x&gt; $ sbt run\n[info] Done packaging.\n[info] Running (fork) program.ToScalaFP\n[info] Recommnedations for userId UserId(1)...\n[info] Algorithm algo1\n[info] Recs: List(Rec(a,0.054459512), Rec(b,0.8465745), Rec(c,0.656385),\nRec(d,0.13308495), Rec(e,0.7825986), Rec(f,0.29209626), Rec(g,0.4820329),\nRec(h,0.1532129), Rec(i,0.16719013), Rec(j,0.9551664))\n[info] ------------------------------\n[info] Recommnedations for userId UserId(2)...\n[info] Algorithm algo2\n[info] Recs: List(Rec(a,0.054459512), Rec(b,0.8465745), Rec(c,0.656385),\nRec(d,0.13308495), Rec(e,0.7825986))\n[info] ------------------------------\n[info] Error Unexpected Error\n[info] ------------------------------\n[info] Error Unexpected Error\n[info] ------------------------------\n[info] Error Unexpected Error\n[info] ------------------------------\n[info] Error Unexpected Error\n[info] ------------------------------\n[success] Total time: 9 s, completed Feb 17, 2019 8:45:15 PM\n\nIt doesn't look accurate, does it? Error cases such as userId not found, no recommendations found and so on are not displayed and the messages for the user are vague in those cases. This is because we are dealing with Option[+A] type and it doesn't give us the expressiveness we need to notify the user with the exact errors on our program.\nHandling Errors: Sum Type to Rescue\nWe need to alert program's user about what specific errors have been found during the execution. For that purpose it will be great to have our execution in terms of Either[+A,+B] instead of Option[+A].\nThe cost of doing that with all the machinery we have defined until now is minimum because of the following:\n\n\nEither[+A,+B] is a Higher-Kinded Type but with 2 Type parameters instead of 1 as our Algebras are requesting. We are going to see in a minute how to solve that problem.\n\n\nWe only need to write an interpreter for that Type, bind getRecommendations call with Either[+A,+B] and let the compiler use the correct interpreter on runtime for us.\n\n\nLambda Types\nLets try to figure out our first problem which is how to bind a Type Constructor with 1 Type parameters (Either[+A,+B]) in a definition with only 1 Type parameter (F[_])\n$$ F[\\_] \\ncong Either[+A,+B] $$\nWe can check this incongruence in Scala console very easily\nscala&gt; :kind Either\nEither's kind is F[+A1,+A2]\n\nAs we can appreciate Either[+A,+B] has kind F[+A,+B] and we are asking a kind F[+A], but we cannot change our Algebras to support F[+A,+B] because it is not going to accept anymore Option[+A] and we want to support both. Instead of changing our algebra we are going to adapt Either[+A,+B] to be a Type Constructor with 1 Type parameter. For that job we are going to use Lambda Types.\nBasically a Lambda Type is similar to a Partially applied function but at a Type Level. We can curry our 2 parameter Type Constructor to obtain another 1 parameter Type Constructor. This is how it is done:\nscala&gt; :kind ({ type T[A] = Either[AppError, A] })#T\nscala.util.Either[AppError,?]'s kind is F[+A]\n\nAs we can see in Scala console example we are fixing Left Either parameter type with AppError since all errors we are going to generate are subtypes of this, and let this phantom type be parameterized only in its Right value Type which is the Type it is going to change during execution.\n\nIn our code we are going to use kind-projector compiler plugin to avoid this boilerplate syntax.\n\nWith kind-projector we can have a more readable Lambda Type like this:\nscala&gt; :kind Either[AppError, ?]\nscala.util.Either[AppError,?]'s kind is F[+A]\n\nInterpreter for Either[+A,+B]\nNow the only thing missing is to write our interpreter for this new type:\nobject interpreter {\n\n  // Option Interpreters here\n\n  implicit object UserRepoEither extends UserRepo[Either[AppError, ?]] {\n    override def getUser(userId: Option[Int]): Either[AppError, UserId] = {\n      for {\n        userParam &lt;- userId.map(UserId).toRight(UserNotProvided)\n        userDb    &lt;- users.find(_ == userParam).toRight(UserNotFound(userParam))\n      } yield userDb\n    }\n  }\n\n  implicit object AlgorithmRepoEither extends AlgorithmRepo[Either[AppError, ?]]{\n\n  override def getAlgorithm(recommenderId: Option[String]):\n    Either[AppError, Algorithm] =\n      recommenderId.orElse(algoDefault).flatMap(algorithms.get(_))\n        .toRight(AlgorithmNotFound(recommenderId.getOrElse(algoDefault.get)))\n\n\n  override def execute(algo: Algorithm, userId: UserId):\n    Either[AppError, UserRec] =\n      algo.run(userId).toRight(RecommendationsNotFound(userId, algo.name))\n  }\n\n  implicit object FilterEither extends Filter[Either[AppError, ?]] {\n    override def filter(userRec: UserRec, limit: Int): Either[AppError, UserRec] = {\n      Right(userRec.copy(recs = recs.slice(0, limit).toList))\n    }\n  }\n\n  implicit object ProgramEither extends Program[Either[AppError, ?]] {\n    override def flatMap[A, B](fa: Either[AppError, A],\n                               afb: A =&gt; Either[AppError, B]): Either[AppError, B] =\n      fa.flatMap(afb)\n\n    override def map[A, B](fa: Either[AppError, A], ab: A =&gt; B): Either[AppError, B] =\n      fa.map(ab)\n\n    override def fold[A, B, C](fa: Either[AppError, A],\n                               first: B =&gt; C,\n                               second: A =&gt; C): C =\n      fa.fold(error =&gt; first(error.asInstanceOf[B]), second(_))\n  }\n}\n\nAnd we can execute both programs running on different interpreters at the same time:\n  def program(userId: Option[Int],\n              recommenderId: Option[String] = None,\n              limit: Option[Int] = None): Unit = {\n\n    import interpreter._\n\n    val resultEither =\n      getRecommendations[Either[AppError, ?]](userId, recommenderId, limit)\n\n    printResults[Either[AppError, ?]](userId, resultEither)\n\n    val resultOption = getRecommendations[Option](userId, recommenderId, limit)\n\n    printResults(userId, resultOption)\n  }\n\nIf we run this program now we can compare detailed error when we interpret the Algebra with Either[+A,+B] against unknown errors with Option[+A]:\nλx.x&gt; $ sbt run\nRecommnedations for userId UserId(1)...\nAlgorithm algo1\nRecs: List(Rec(a,0.66836), Rec(b,0.8242624), Rec(c,0.74691266),\nRec(d,0.9902125), Rec(e,0.775927), Rec(f,0.015915632), Rec(g,0.19724733),\nRec(h,0.92668074), Rec(i,0.2997946), Rec(j,0.1962437))\n\nRecommnedations for userId UserId(1)...\nAlgorithm algo1\nRecs: List(Rec(a,0.66836), Rec(b,0.8242624), Rec(c,0.74691266),\nRec(d,0.9902125), Rec(e,0.775927), Rec(f,0.015915632), Rec(g,0.19724733),\nRec(h,0.92668074), Rec(i,0.2997946), Rec(j,0.1962437))\n------------------------------\n\n\nRecommnedations for userId UserId(2)...\nAlgorithm algo2\nRecs: List(Rec(a,0.66836), Rec(b,0.8242624), Rec(c,0.74691266),\nRec(d,0.9902125), Rec(e,0.775927))\n\nRecommnedations for userId UserId(2)...\nAlgorithm algo2\nRecs: List(Rec(a,0.66836), Rec(b,0.8242624), Rec(c,0.74691266),\nRec(d,0.9902125), Rec(e,0.775927))\n------------------------------\n\nError Algorithm not found for id algo5\nError Unexpected Error\n------------------------------\n\nError User not found for id UserId(14)\nError Unexpected Error\n------------------------------\n\nError User id must be provided\nError Unexpected Error\n------------------------------\n\nError Recommendations not found for UserId(1) with algorithm 'algo3'\nError Unexpected Error\n------------------------------\n\n\nProcess finished with exit code 0\n\nTesting\nWith this approach we can test our code in a straight forward way. We only need to provide a Test 1 parameter Type constructor and write our interpreters. Thats all.\nTo have an idea of this approach to that this could be done like this:\n\n  // Provide Type parameter Test which wraps a value\n  case class Test[+A](value: A)\n\n  // Provide Interpreters for example for userRepo\n   implicit object TestUserRepo extends UserRepo[Test] {\n    override def getUser(userId: Option[Int]): Test[UserId] =\n    Test(userId.map(UserId(_)).getOrElse(UserId(1)))\n  }\n\n\nConclusion\nTagless Final Encoding is a very good technique to encode DSL and separate the interpretation of DSL definition from implementation in a pure Functional way and as i pointed out on Disclaimer section, implementing this technique with some Scala FP library such as cats, scalaz or any other do the work strait forward and easy, removing a lot of boilerplate code we are using here, specially Program Algebra\n","id":"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/","title":"Tagless Final in Scala: A Practical example"},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"body":"Source Code\nYou can find source code of the example described in this post here\nIntroduction\nIn this post i am going to explore a simple technique for organizing our programs which is called Tagless Final Encoding to write testable programs in Haskell. I am also use TypeApplication LANGUAGE directive to write more readable and flexible test.\nWhy Tagless Final?\nNowadays in Haskell Community there is an open discussion about using Free Monads, mtl or Tagless Final Encoding to write internal DSL (Domain Specific Language) for representing our programs in a descriptive and Functional way.\nIn my personal opinion i think all of these tools, theories and techniques are suitable to do it but depends on the context of the person, team or solution you are writing to decide which is more useful.\nFor example:\n\n\nFree Monad: I think it is great to have tools that are based on Category Theory concepts such as Free Applicative, Free Monad and so on. There is a great paper about this Notions of Computation as Monoid. In that sense Free Monad not only help us to describe our programs but also to have certain Math Properties in our toolbox to manipulate them. Although i have never benchmarked any of the Free Monad implementations out there, i know there are complains about their performance in the community. Beyond this i think for beginners it is a little difficult to implement.\n\n\nMonad Transformers (mtl): Also great tool, based on simple Monad concept which is easier to understand for beginners and without performance penalties if you are using carefully. It is also the most used tool for dealing with different Monads in a single program from the beginning of Haskell. The only disadvantage i could pointed out is that is less readable and understandable in the code when you are stacking more than 3 Monads. Also a drawback for beginners.\n\n\nTagless Final: You only need to define and implement Typeclasses. In the original post i have wrongly mentioned \"it is a technique not based on any paper or Math Theory\", but thank you to p-alik who pointed me out in reddit channel that there is paper for this here Typed final (tagless-final) style. The main advantage for me is it is beginner friendly, readable, easy to understand, test and extend.\n\n\nHaving said that, I would like to talk about Tagless Final as an approach for Haskell beginners in order to help them to organize and describe programs; make them extensible and testable.\nWhat is Tagless Final Encoding?\nTagless Final Encoding is a technique for embedding a DSL (Domain Specific Language) in a Functional Programming Language. We need to define a Language for using it and an Interpreter to indicate how it should behave on each defined term. For this purpose we are going to use Typeclasses.\nTo sum up in Tagless Final Encoding style there are:\n\n\nTypeclasses: Set of operations over a Type.\n\n\nInterpreter: Instances of those Typeclasses for each specific Type\n\n\nTagless Final Encoding in practice\nWe are going to build a basic program which request some user data. The program is going to do the following:\n\nFirst try to recover the data from a cache\nIf data is found it is returned\nIf there is no data in the cache, search user data in source repository and update cache\n\ntype UserName = String\n\ndata DataResult = DataResult String\n  deriving (Eq, Show)\n\nrequestData :: Monad m =&gt; UserName -&gt; m [DataResult]\nrequestData userName = do\n cache  &lt;- getFromCache userName\n result &lt;- case cache of\n   Just dataResult -&gt; return dataResult\n   Nothing         -&gt; do\n     dataResult &lt;- getFromSource userName\n     storeCache dataResult\n     return dataResult\n storeCache result\n return result\n\nHere it is our basic program which implements what we described above, but obviously this code doesn't work because we need to define functions such as getFromCache, getFromSource and storeCache.\nFor defining that we are going to use Typeclasses as we mentioned, in order to represent our program capabilities.\nclass Monad m =&gt; Cache m where\n  getFromCache :: String -&gt; m (Maybe [DataResult])\n  storeCache :: [DataResult] -&gt; m ()\n\nclass Monad m =&gt; DataSource m where\n  getFromSource :: String -&gt; m [DataResult]\n\n\nWhy are we defining Cache and DataSource Typeclasses as Monad also? Basically because we want to combine and chain our DSL terms in a single program.\nBut we still need to change our program definition since we are constraining only on Monad and we want to use Cache and DataSource terms from the implicit context.\nrequestData :: (Cache m, DataSource m) =&gt; UserName -&gt; m [DataResult]\nrequestData userName = do\n cache  &lt;- getFromCache userName\n result &lt;- case cache of\n   Just dataResult -&gt; return dataResult\n   Nothing         -&gt; getFromSource userName\n storeCache result\n return result\n\nNotice that we don't need anymore Monad Constraint in our signature because both Cache and DataSource are Monads also.\nThe only thing left is to write our Instances to provide some implementation. We are going to provide a fake implementation for IO.\ninstance Cache IO where\n  getFromCache _ = return Nothing\n  storeCache _ = return ()\n\ninstance DataSource IO where\n  getFromSource user = return $ [DataResult $ \"source: \" &lt;&gt; user]\n\nIf we run our program from ghci we are going to see it is working:\nλx.x&gt; import Data\n\nλx.x&gt; requestData \"john\"\n[DataResult \"source: john\"]\n\nProvide and Test with different implementations using Type Application\nOne of the things I have announced on the beginning of this post is i am going to show how easy it is to test our programs using this technique combined with TypeApplication LANGUAGE extension. This combination enable us not only to test, but also to provide and interchange different instances of our Typeclasses in a straightforward way.\nInstances\nIn order to provide different instances of Cache and DataSource, and play around with different cases, for example when data is in cache or not, i am going to wrappe IO type in different newtype representations.\n{-# LANGUAGE GeneralisedNewtypeDeriving #-}\n\nnewtype NotInCache a = NotInCache { unNoCache :: IO a }\n  deriving (Monad, Applicative, Functor)\n\ninstance Cache NotInCache where\n  getFromCache _ = NotInCache $ return Nothing\n  storeCache _ = NotInCache $ return ()\n\ninstance DataSource NotInCache where\n  getFromSource user = return $ [DataResult $ \"source: \" &lt;&gt; user]\n\n\nFor the first instance we need to do enable GeneralisedNewtypeDeriving extension to allow us deriving Functor, Monad and Applicative because our Typeclasses Cache and DataSource are also Monad and we need to provide implementations of those Typeclasses for our custom type NotInCache\nNow if we are trying to run this in ghci we are getting the following error:\nλx.x&gt; requestData \"john\"\n\n&lt;interactive&gt;:5:1: error:\n    • Ambiguous type variable ‘m0’ arising from a use of ‘print’\n      prevents the constraint ‘(Show\n                                  (m0 [DataResult]))’ from being solved.\n      Probable fix: use a type annotation to specify what ‘m0’ should be.\n      These potential instances exist:\n        instance (Show a, Show b) =&gt; Show (Either a b)\n          -- Defined in ‘Data.Either’\n        instance Show a =&gt; Show (Maybe a) -- Defined in ‘GHC.Show’\n        instance (Show a, Show b) =&gt; Show (a, b) -- Defined in ‘GHC.Show’\n        ...plus 14 others\n        ...plus 89 instances involving out-of-scope types\n        (use -fprint-potential-instances to see them all)\n    • In a stmt of an interactive GHCi command: print it\n\nBasically the compiler is saying us that it cannot find an unambiguous instance to use for our program. But also as the compiler is pointed out we can use TypeApplication extension to tell the compiler what instance should use and provide an explicit evidence of that.\nλx.x&gt; :set -XTypeApplications\n\nλx.x&gt; :t requestData \"john\"\nrequestData \"john\"\n  :: (Data.Cache m, DataSource m, Data.Logging m) =&gt; m [DataResult]\nλx.x&gt; :t requestData @NotInCache \"john\"\nrequestData @NotInCache \"john\" :: NotInCache [DataResult]\n\n\nHere we've enabled extension and after that we are running our program with NotInCache type. Notice that now we need to call unNoCache to unwrap our underlying IO and effectively running in our ghci IO loop.\nx.x&gt; unNoCache $ requestData \"john\"\n[DataResult \"source: john\"]\n\nWe can also do it from our .hs file.\nmain :: IO ()\nmain = (unNoCache $ requestData \"john\") &gt;&gt;= (putStrLn . show)\n\nNow we are ready for different instances!!!\nnewtype InCache a = InCache { unInCache :: IO a }\n  deriving (Monad, Applicative, Functor)\n\ninstance Cache InCache where\n  getFromCache user = InCache $ return $ Just [DataResult $ \"cache: \" &lt;&gt; user]\n  storeCache _ = InCache $ return ()\n\ninstance DataSource InCache where\n  getFromSource _ = undefined\n\nmain :: IO ()\nmain = do\n  (unNoCache $ requestData \"john\") &gt;&gt;= (putStrLn . show)\n  (unInCache $ requestData \"john\") &gt;&gt;= (putStrLn . show)\n\nThe outputs now look like this:\nλx.x&gt; Data.main\n[DataResult \"source: john\"]\n[DataResult \"cache: john\"]\n\nExtensibility\nOne of the important aspects of Tagless Final Encoding is its extensibility property. It is extensible in 2 dimensions:\n\n\nVertical Extensibility: It is what we have just done adding different implementations for the same Typeclasses without altering our program.\n\n\nHorizontal Extensibility: It is adding new capabilities to the program in order to extend some functionality inside it.\n\n\nHorizontal Extensibility\nOur program capabilities beyond Monad, Functor and Applicative Typeclasses are Cache and DataSource. If we are saying that it is Horizontal Extensible we can add more capabilities apart from those mentioned. For example what about Logging?.\nLet do it with our example:\n\nclass Monad m =&gt; Logging m where\n  logMsg :: String -&gt; m ()\n\nrequestData :: (Cache m, DataSource m, Logging m) =&gt; UserName -&gt; m [DataResult]\nrequestData userName = do\n cache  &lt;- getFromCache userName\n result &lt;- case cache of\n   Just dataResult -&gt; return dataResult\n   Nothing         -&gt; getFromSource userName\n storeCache result\n logMsg $ \"Result data for user: \" &lt;&gt; userName &lt;&gt; \" - data: \" &lt;&gt; show result\n return result\n\n\nAnd now providing instances for Logging\ninstance Logging NotInCache where\n  logMsg = NotInCache . putStrLn\n\ninstance Logging InCache where\n  logMsg = InCache . putStrLn\n\n\nIf we run the program we obtain the following:\nλx.x&gt; Data.main\nResult data for user: john - data: [DataResult \"source: john\"]\n[DataResult \"source: john\"]\nResult data for user: john - data: [DataResult \"cache: john\"]\n[DataResult \"cache: john\"]\n\nConclusion\nAs we can see, Tagless Final Encoding is a pretty good technique to build testable and extensible programs.\nWe have also demonstrated how easy is to interchange and provide different instances using TypeApplication extension.\n","id":"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/","title":"Tagless Final Encoding in Haskell"},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"body":"Introduction\nIn previous posts I have written about how encode Effects (e.g. IO, Database access and Caching) using a Tagless Final approach.\nOn that article, the idea was to show how to organize a program which can have different Effects and compose and combine them in a single program. I've also explored the technique of Tagless Final for representing the encoding and mtl in particular to handle or interpret effects.\nContext\nThe majority of Industry Software Solutions nowadays cannot escape to be connected to an external Service or System. Although there are some cases where our Solutions does not need connecting to an external service, the program still needs some kind of monitoring, metrics and logs before being shipped into a production environment. Taking these into consideration, it seems inevitable to deal with side effects in our language. Therefore Effectful computations or Algebraic Effect Handlers is a very interesting and important topic for me, because it encodes Effects as a first-class citizen in our FP Programs.\nEveryone of us, as Functional Programming Developer want to deal only with pure functions and we don't want to deal with side effects. But pure FP can happen only on small portions of our software solutions in the Industry and at the end we need to deal with side effects.\nAs I've explained in my previous article there are several ways to encode Effects in order to write our program with pure functions and write the interpretation or side effects computations to specific Effect in a decouple way. In such a way we end up with a Pure Program that could be run or interpret later with Side effects computations. This powerful abstraction allow us to reason about our programs as we do with pure functions but at the same time having the ability to run it in other non-pure contexts.\nAfter trying different approach and libraries for encoding and handling effects in production systems, I would like to explain my experience using freer-simple which is one of my favourite and also the one that I am currently using.\nfreer-simple\nfreer-simple is an Effect System library based on some of the famous papers of Oleg Kiselyov et al.1 about Free Monads and Extensible Effects. The features that are pointed out from the library doc it self are:\n\nEfficient Effect system\nSome implementations of common MTL Monads\nComponents for defining Custom Effects\n\nOne key feature that is not explicitly mentioned on the library doc is that Effect encoding is done at Type level using and Extensible Open Union Type (a type-indexed coproduct of functors) as it is clearly explain here. This means that the unpeel of the different Effectful layers are being done in compile time and at the same time it is constant with respect to the size of the Union.\nAnother important aspect of the implementation of the library is that it used a single Monad which is Eff r a, avoiding the need of stacking multiple Monad scaping to the quadratic $$O(n^2)$$ instance definitions problem in Monad Transformers. The common question that might arise here is: How the effects are handle if they are not stacked and are orthogonal? The answer is using Coroutines: \"a computation sends a request and suspends, waiting for a reply; a handler waits for a request, handles what it can, and resumes the client\"2. This is implemented with Continuation Monad.\nLets see some examples on how to use it. For that propose I am going to use a real example that I had to do but i am going to change some names in order to preserve privacy and details of the solution behind.\nfreer-simple by Example\nUse Case\nThe use case was the following:\nAs an user I want to upload some personal documents\nto the system in order to complete my identification process.\n\nThis is also known as KYC (Known your Customer) process. So, lets assume that we need to run this kind of process and identify the user, asking for some personal documentation to verify them. In that case we need to be able to provide some mean to the user that is already registered in our System to allow them upload those documents.\nLets assume w.l.o.g. that our Solution is going to use AWS S3 as a Storage Provider for the documentation and PostgreSQL as a Relational Database for storing related data to that user and document. We are going to need that DB in order to store the reference or document path to S3 in order to be able to recover that specific document later if it is requested by the user or by other means.\nOn the other hand we are going to expose this capability as a REST API endpoint and we are going to use servant for that matter.\nProgram\nFirst lets create the main algorithm of our program that should do the following:\n\nReceived the Requested Document ByteString with some metadata associated in order to identify the user\nIf the user does not exist in our system (Not registered yet) throw an error.\nIf the user is registered, upload the document to S3\nIf the upload was successful, store the S3 reference to our DB\nReturn this reference to the user\n\nIn Haskell lingua this should be like this\nimport           Control.Monad.Freer.Error as FE\n\nuploadDocument :: Members '[DocStorage, DataAccess, Logging, AppError] eff\n               =&gt; Document\n               -&gt; Eff eff DocRef\nuploadDocument doc =\n  ifM\n    (userExists (doc^.document.userId))\n    ( do\n       ref &lt;- uploadDoc doc\n       logInfo (\"Document was uploaded in \" &lt;&gt; show ref)\n       setDocumentUploaded doc ref\n       return ref\n    )\n    $ FE.throwError USER_NOT_FOUND\n\n\nLets start analyzing this code. Members '[DocStorage, DataAccess, Logging, AppError] eff Constraint is indexed by an Open Union Type [DocStorage, DataAccess, Logging, AppError] whose Coproduct indicates what are the possible effects that eff can encode into. This is telling to the compiler that our Eff eff a are constraining by this Open Union Type and we can interleave any of those Effects throughout all the computation, without needing any lifting because we are not stacking Monads as in Monad Transformer approach.\nWe need to see now all the Effects that are involved in the Open Union Type which in this case are: [DocStorage, DataAccess, Logging, AppError].\nEffects\nIn freer-simple library there is a tool set for defining Custom Effects as well as some already provided common effects that can be found in Monad Transformer libraries like mtl. In my example I am using both kind of effects, already built in effects that are packed with it Handlers and Custom Effects that we need to build and provider the specific Handler for them.\n\n\nCustom effects in my example are: DocStorage, DataAccess and Logging. Last one could have been implemented using Writer effect provided by the library but I prefer something custom in order to interpret that effect using co-log library.\n\n\nBuilt-in effect in this example is AppError\n\n\nCustom Effects\nIn Custom Effects you need to provide the definition of the GADT which describes the Algebra of your Effect and the function that introduces or send that Algebra to the Eff r a Monad whose indexed Open Union Type is contained in. With this function we are injecting our Algebra into that index list.\n\nNOTE: It is important to point out that freer-simple provides Template Haskell tooling for auto-generate the send injecting\nfunctions for us, but I've preferred to be a little more boilerplate for educational purpose.\n\nDocStorage Effect\nimport Control.Monad.Freer as F\n\ndata DocStorage r where\n  UploadDocument  :: Document -&gt; DocStorage DocRef\n\nuploadDoc :: Member DocStorage effs =&gt; Document -&gt; Eff effs DocRef\nuploadDoc = F.send . UploadDocument\n\nDataAccess Effect\nimport Control.Monad.Freer as F\n\ndata DataAccess r where\n  UserExists          :: UserId -&gt; DataAccess Bool\n  SetDocumentUploaded :: Document -&gt; DocRef -&gt; DataAccess ()\n\nuserExists :: Member DataAccess effs =&gt; UserId -&gt; Eff effs Bool\nuserExists = F.send . UserExists\n\nsetDocumentUploaded :: Member DataAccess effs =&gt; Document -&gt; DocRef -&gt; Eff effs ()\nsetDocumentUploaded doc = F.send . SetDocumentUploaded doc\n\nLogging Effect\nimport Control.Monad.Freer as F\n\ndata Logging r where\n  LogInfo   :: Text -&gt; Logging ()\n  LogError  :: Text -&gt; Logging ()\n\nlogInfo :: Member Logging effs =&gt; Text -&gt; Eff effs ()\nlogInfo = F.send . LogInfo\n\nlogError :: Member Logging effs =&gt; Text -&gt; Eff effs ()\nlogError = F.send . LogError\n\nBuilt-In Effects\nIn the case of built-in effects the effort is minimum because the Effect and handler is already provided by the library and we only need to define some aliases, but only if we want as in my case.\n{-# LANGUAGE PatternSynonyms #-}\n\nimport Control.Monad.Freer.Error\n\ndata Err\n  = NotFound Text\n  | InternalError Text\n  | Forbidden Text\n  | BadRequest Text\n  deriving (Eq, Show)\n\npattern ERROR_UPLOADING_DOCUMENT\n      , DOCUMENT_NOT_FOUND\n      , USER_NOT_FOUND\n     :: Err\npattern ERROR_UPLOADING_DOCUMENT   = InternalError \"Document uploading error\"\npattern DOCUMENT_NOT_FOUND         = NotFound      \"Document was not found on the Storage\"\npattern USER_NOT_FOUND             = NotFound      \"User was not found on the system\"\n\ntype AppError = Error Err\n\nIn this case the library already provide a Higher Order Type which is newtype Error e r which Value Constructor is Error :: e -&gt; Error e r, therefore its kind is * -&gt; * -&gt; *. Our alias is type AppError = Error Err whose kind is * -&gt; * which coincide with the Kind that is contain by the Indexed Open Union Type\nλx.x&gt; import Control.Monad.Freer\nλx.x&gt; :k Eff\nEff :: [* -&gt; *] -&gt; * -&gt; *\nλx.x&gt;\n\nHandlers or Interpreters\nThe next step is to provide some interpretation for those effects, we can have either pure interpretations which is going to be mainly used for Testing where we need to be deterministic, or side effects interpretations which is going to be connecting to Database, APIs, etc.\nLets see some example of side effects interpretations for this effects presented above.\nLogging Interpreter\n\nimport Colog as C\nimport Control.Monad.Freer as F\nimport Servant\n\nrunColog :: forall effs a. (LastMember Handler effs)\n             =&gt; Eff (Logging ': effs) a\n             -&gt; Eff effs a\nrunColog =\n    interpretM $\n        \\case\n            LogInfo  msg -&gt; liftIO $ withColog I msg\n            LogError msg -&gt; liftIO $ withColog E msg\n\nwithColog :: Severity -&gt; Text -&gt; IO ()\nwithColog s = usingLoggerT (cmap fmtMessage logTextStdout) . C.log s\n\nThe important thing to point out here is that in runColog interpretation we are receiving the Effect that is being waited by this Handler, as we explain in the introduction to the library. Because of this, the Effect that is the first parameter passed to this interpreter is only indexed by Logging Algebra plus some possible rest of Algebras. This is Sum Type is indicated by the use of Cons (':) at Type level, finally returning that possible rest of effects without the Logging Algebra inside. This is a great and powerful semantic because we are stating by its types that we are taking of Logging Algebra and that is not going to be part anymore of the Open Union after this interpreter runs.\nThe LastMember Handler effs Constraint indicates that the last effect in the Stack is going to be Handler, since on top of this we are running a Servant API which is the last Monadic computation. This is not breaking any abstraction at all because this is the interpreter and not the Algebra, and we know that this interpreter is going to be use only by our Servant API. We can write other interpreters if we are in other context different that Servant.\nDatabase Interpreter\n\nimport Database.PostgreSQL.Simple as D\nimport Database.PostgreSQL.Simple.Transaction as T\nimport Database.PostgreSQL.Simple.SqlQQ\n\nrunPostgresql :: forall effs a. (LastMember Handler effs,  Members '[ AppError, Logging] effs)\n              =&gt; Conf\n              -&gt; Eff (DataAccess ': effs) a\n              -&gt; Eff effs a\nrunPostgresql conf =\n    interpret $\n        \\case\n            UserExists userId -&gt; callUserExists conf userId\n            SetDocumentUploaded docToUpload docRef  -&gt; callSetDocumentUploaded conf docToUpload docRef\n\ncallUserExists :: (LastMember Handler eff, Members '[AppError, Logging] eff)\n                        =&gt; Conf -&gt; Text -&gt; Eff eff Bool\ncallUserExists conf userId = do\n  logInfo \"Calling for to check if user exist in the Database\"\n  conn &lt;- liftIO $ connectPostgreSQL (conf^.dbConnection . L.to encodeUtf8)\n  [Only i] &lt;- liftIO $ D.query\n                        conn\n                        [sql|\n                            SELECT 1\n                            FROM users\n                            where user_id = ?'\n                        |]\n                        userId\n   return $ (i == 1)\n\n-- callSetDocumentUploaded is similar but with an D.execute statement\n\n\n\nNOTE: Some details of the implementation is not provided here.\n\nImportant thing here to remark is that we can interleave other Effects in the stack in this interpretation without needing any lifting or complex process. We are just saying that in the same context we have other effects like AppError or Logging and we can use those Algebras that are going to be interpret at some point in time.\nAnother important aspect is that Conf object can be easily introduce with a Reader that is already provided by freer-simple and we can have something implicit instead of explicit. I wanted to leave it as explicit just for the purpose of the example, but in practice I am using it with Reader and it looks like this:\n\nimport Control.Monad.Freer.Reader as RE\nimport Database.PostgreSQL.Simple as D\nimport Database.PostgreSQL.Simple.Transaction as T\nimport Database.PostgreSQL.Simple.SqlQQ\n\nrunPostgresql :: forall effs a. (LastMember Handler effs,  Members '[ Conf, AppError, Logging] effs)\n              =&gt; Eff (DataAccess ': effs) a\n              -&gt; Eff effs a\nrunPostgresql conf =\n    interpret $\n        \\case\n            UserExists userId -&gt; callUserExists userId\n            SetDocumentUploaded docToUpload docRef  -&gt; callSetDocumentUploaded docToUpload docRef\n\ncallUserExists :: (LastMember Handler eff, Members '[Conf, AppError, Logging] eff)\n                        =&gt; Text -&gt; Eff eff Bool\ncallUserExists userId = do\n  conf &lt;- RE.ask\n  logInfo \"Calling for to check if user exist in the Database\"\n  conn &lt;- liftIO $ connectPostgreSQL (conf^.dbConnection . L.to encodeUtf8)\n  [Only i] &lt;- liftIO $ D.query\n                        conn\n                        [sql|\n                            SELECT 1\n                            FROM users\n                            where user_id = ?'\n                        |]\n                        userId\n   return $ (i == 1)\n\n-- callSetDocumentUploaded is similar but with an D.execute statement\n\n\nAWS S3 Interpreter\nimport Control.Lens as L\nimport Control.Monad.Trans.AWS as A\nimport Control.Monad.Catch as MC\nimport Network.AWS.S3\n\nrunS3Storage :: forall effs a. (LastMember S.Handler effs,  Members '[ AppError, Logging, S.Handler] effs)\n             =&gt; Conf\n             -&gt; Eff (DocStorage ': effs) a\n             -&gt; Eff effs a\nrunS3Storage conf =\n    interpret $\n        \\case\n            UploadDocument doc -&gt; uploadFile conf doc\n\nuploadFile :: (LastMember S.Handler eff, Members '[AppError, Logging, S.Handler] eff)\n           =&gt; Conf -&gt; Document -&gt; Eff eff DocRef\nuploadFile conf doc = do\n    env &lt;- getEnv conf\n    let bucketName = conf^.bucketName\n    let key = objectKey conf doc\n    result &lt;- liftIO . MC.try . runResourceT . runAWST env . A.send . putObject' bucketName key $ doc\n    either toInternalError (const (key^._ObjectKey. L.to (pure . DocRef))) result\n\n    where\n        putObject' bucketName key doc' = putObject (BucketName bucketName) key (doc'^.dtuContent . L.to toBody)\n                                         &amp; set poContentType (doc'^.document^?contentType)\n\n\n\n\nNOTE: Some details of the implementation is not provided here.\n\nRun Interpreters\nFinally we need to have the Continuation Monad running with all the Handlers waiting for their requests.\nrunEffects :: Conf -&gt; Eff '[ DocStorage, DataAccess, Logging, AppError, Handler ] a -&gt; Handler a\nrunEffects conf = (either toServantError return =&lt;&lt;) .\n                    runM .\n                    runError .\n                    runColog .\n                    runPostgresql conf .\n                    runS3Storage conf\n\ntoServantError :: MonadError ServerError m =&gt; Err -&gt; m a\ntoServantError (BadRequest msg)    = throwError err400 { errBody = toSL msg }\ntoServantError (InternalError msg) = throwError err500 { errBody = toSL msg }\ntoServantError (NotFound msg)      = throwError err404 { errBody = toSL msg }\ntoServantError (Forbidden msg)     = throwError err403 { errBody = toSL msg }\n\nThen we have our Program and our Interpretation, therefore it is a matter of composing them:\nrun :: Conf -&gt; Document -&gt; Handler DocRef\nrun conf = runEffects conf . uploadDocument\n\nTest\nAs we are going to see now, implementing Mocks and Testing our Effectful Programs in a deterministic manner is straightforward and easy.\n\ndata Boundaries = Boundaries\n  { _bUserExists      :: Bool\n  , _bFailSetUploaded :: Bool\n  , _bFailUpload      :: Bool\n  , _bDownload        :: DownloadBoundary\n  } deriving (Generic)\n\nrunTest :: Eff '[DocStorage, DataAccess, Logging, AppError, Identity] a -&gt; Either Err a\nrunTest = runWithTest def\n\nrunWithTest :: Boundaries -&gt; Eff '[DocStorage, DataAccess, Logging, AppError, Identity] a -&gt; Either Err a\nrunWithTest boundaries = runIdentity . runM . runError . runTestColog . runPostgresqlTest boundaries . runS3StorageTest boundaries\n\nrunTestColog :: forall effs a. Eff (Logging ': effs) a\n             -&gt; Eff effs a\nrunTestColog req = do\n    ((x, _), _) &lt;- F.reinterpret2 go req &amp; FS.runState [] &amp; runWriter\n    pure x\n  where\n    go :: Logging v\n       -&gt; Eff (FS.State [Text] ': FW.Writer [Text] ': effs) v\n    go (LogInfo msg)  = tell [\"INFO: \"&lt;&gt;msg]\n    go (LogError msg) = tell [\"ERROR: \"&lt;&gt;msg]\n\nrunPostgresqlTest :: Members '[ AppError ] effs =&gt; Boundaries -&gt; Eff (DataAccess ': effs) a  -&gt; Eff effs a\nrunPostgresqlTest Boundaries{..} =\n    interpret $\n        \\case\n            UserExists userId -&gt; return _bUserExists\n            SetDocumentUploaded _ _  -&gt; when _bFailSetUploaded $ FE.throwError ERROR_UPLOADING_DOCUMENT\n\n\nrunS3StorageTest :: Members '[ AppError ] effs =&gt; Boundaries -&gt; Eff (DocStorage ': effs) a -&gt; Eff effs a\nrunS3StorageTest Boundaries{..} =\n    interpret $\n        \\case\n            UploadDocument _ -&gt; if _bFailUpload\n                                  then FE.throwError ERROR_UPLOADING_DOCUMENT\n                                  else return $ DocRef \"test_ref\"\n\n\nIt is just a matter of implementing the right interpreters in the format that we want that allow us to run any test or combination we might need.\nConclusions\nfreer-simple library is an ergonomic but not easy Effect System library that is based on Academic Research Papers and provide a Robust and Extensible way to build Effectful Programs.\nOn the other hand we have seen the flexibility this tooling has providing us with some built-in effects like Reader, Writer, State and so on.\nFinally we have seen how we can quickly define pure interpreters or Handlers to escape from the non-deterministic context and be able to Test our programs. This interpretations are easy to built, avoiding the $$O(n^2)$$ problem on mtl instances without requiring Monad mock instances; and highly composable as well.\nAcknowledges\nThank you to @monadplus who review this Article and help me to improve it.\nAppendix - Prerequisites for running code\nThe following are prerequisites for running examples here:\nGHC\n\nGHC 8.6.5 or above\n\nLanguage Extensions\n- DataKinds\n- DeriveAnyClass\n- DeriveGeneric\n- DerivingStrategies\n- DerivingVia\n- GADTs\n- GeneralizedNewtypeDeriving\n- LambdaCase\n- OverloadedStrings\n- PartialTypeSignatures\n- RecordWildCards\n- Rank2Types\n- RankNTypes\n- ScopedTypeVariables\n- TypeApplications\n- TypeFamilies\n- TypeOperators\n\nDependencies\n- aeson\n- amazonka\n- amazonka-s3\n- base\n- base58-bytestring\n- bytestring\n- co-log\n- conduit\n- conduit-extra\n- exceptions\n- freer-simple\n- lens\n- text\n\nAnd also extra deps for servant\n","id":"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/","title":"Encoding Effects using freer-simple"},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"body":"Building Diesel Macro for generating FromSql and ToSql derivation on Enum PostgreSQL types: A Code-First Guide\nIn this blog post, we will explore how to build a simple macro crate to automatic generate derivations for ToSql and FromSql in the case of PostgreSQL binding for diesel. This simplifies handling enums in Rust when working with Diesel and PostgreSQL. Instead of focusing on publishing the crate, we will provide a step-by-step guide on how to create the procedural macro and use it in your Rust projects.\nThe crate is already published by me here https://crates.io/crates/diesel_sqltype_enum_pg.\n##&nbsp;Step 1: Create a New Rust Crate\nBegin by creating a new Rust crate for our procedural macro. Use Cargo, Rust's package manager, to initialize a new project with the following command:\ncargo new enum_diesel_macros\n\nThis command generates a new directory named enum_diesel_macros with the required project structure.\nStep 2: Define the Procedural Macro\nIn the enum_diesel_macros crate, the most crucial step is defining the procedural macro. Below is the code for the procedural macro:\n#[proc_macro_derive(FromToSql, attributes(fromtosql))]\npub fn describe(input: TokenStream) -&gt; TokenStream {\n    // Parse the input and extract relevant information\n    let DeriveInput {\n        data, ident, attrs, ..\n    } = parse_macro_input!(input);\n\n    // Ensure that the macro is applied to an enum\n    match data {\n        syn::Data::Enum(DataEnum { .. }) =&gt; {}\n        _ =&gt; {\n            panic!(\"Only supported for enum type\")\n        }\n    };\n\n    // Extract attributes provided in the derive macro\n    let binding = attrs\n        .iter()\n        .filter(|a| a.path().is_ident(\"fromtosql\"))\n        .flat_map(|a| {\n            let mut p = Vec::new();\n            let parser = a\n                .parse_args_with(Punctuated::&lt;syn::Ident, Eq&gt;::parse_separated_nonempty)\n                .unwrap();\n            let ident = parser.first().cloned().map(|f| f.to_string());\n            let value = parser.last().cloned();\n            if let Some(\"sql_type\") = ident.as_deref() {\n                if let Some(value) = value {\n                    p.push(value)\n                }\n            }\n            p\n        })\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    let att = match binding.first() {\n        Some(idnt) =&gt; idnt,\n        None =&gt; panic!(\"`companion` attribute not found\"),\n    };\n\n    // Generate code for ToSql and FromSql implementations\n    let output = quote! {\n         impl ::diesel::serialize::ToSql&lt;#att, ::diesel::pg::Pg&gt; for #ident {\n             fn to_sql&lt;'b&gt;(&amp;'b self, out: &amp;mut ::diesel::serialize::Output&lt;'b, '_, ::diesel::pg::Pg&gt;) -&gt; ::diesel::serialize::Result {\n                 use ::std::io::Write;\n                 out.write_all(self.to_string().as_bytes())?;\n                 Ok(::diesel::serialize::IsNull::No)\n             }\n         }\n\n         impl FromSql&lt;#att, ::diesel::pg::Pg&gt; for #ident {\n            fn from_sql(bytes: ::diesel::pg::PgValue) -&gt; ::diesel::deserialize::Result&lt;Self&gt; {\n                use ::std::str::FromStr;\n                let value: String = &lt;String as FromSql&lt;::diesel::sql_types::Text, ::diesel::pg::Pg&gt;&gt;::from_sql(bytes)?;\n                #ident::from_str(value.as_str())\n                    .map_err(|e| format!(\"Error converting from PgValue {:?}\", e).into())\n            }\n        }\n    };\n\n    // Return the generated code as a TokenStream\n    output.into()\n}\n\nThis procedural macro handles the generation of FromSql and ToSql implementations for your enums, making enum handling in Diesel more straightforward.\nNote a couple of things in this code.\n\nWe are pattern matching in the AST for allowing only configure this macro on Enum types.\n\n    // Ensure that the macro is applied to an enum\n    match data {\n        syn::Data::Enum(DataEnum { .. }) =&gt; {}\n        _ =&gt; {\n            panic!(\"Only supported for enum type\")\n        }\n    };\n\n\n\n\nThen we iterate\nHere we over the attributes inside the macro, to be sure that the companion sql_type is set in order to enable the compiler to verify that declaration inside Diesel schema.\n\n // Extract attributes provided in the derive macro\n    let binding = attrs\n        .iter()\n        .filter(|a| a.path().is_ident(\"fromtosql\"))\n        .flat_map(|a| {\n            let mut p = Vec::new();\n            let parser = a\n                .parse_args_with(Punctuated::&lt;syn::Ident, Eq&gt;::parse_separated_nonempty)\n                .unwrap();\n            let ident = parser.first().cloned().map(|f| f.to_string());\n            let value = parser.last().cloned();\n            if let Some(\"sql_type\") = ident.as_deref() {\n                if let Some(value) = value {\n                    p.push(value)\n                }\n            }\n            p\n        })\n        .collect::&lt;Vec&lt;_&gt;&gt;();\n\n    let att = match binding.first() {\n        Some(idnt) =&gt; idnt,\n        None =&gt; panic!(\"`companion` attribute not found\"),\n    };\n\n\nFinally, we are able to generate the derivations and add it to the TokenStream of the AST.\n\n    // Generate code for ToSql and FromSql implementations\n    let output = quote! {\n         impl ::diesel::serialize::ToSql&lt;#att, ::diesel::pg::Pg&gt; for #ident {\n             fn to_sql&lt;'b&gt;(&amp;'b self, out: &amp;mut ::diesel::serialize::Output&lt;'b, '_, ::diesel::pg::Pg&gt;) -&gt; ::diesel::serialize::Result {\n                 use ::std::io::Write;\n                 out.write_all(self.to_string().as_bytes())?;\n                 Ok(::diesel::serialize::IsNull::No)\n             }\n         }\n\n         impl FromSql&lt;#att, ::diesel::pg::Pg&gt; for #ident {\n            fn from_sql(bytes: ::diesel::pg::PgValue) -&gt; ::diesel::deserialize::Result&lt;Self&gt; {\n                use ::std::str::FromStr;\n                let value: String = &lt;String as FromSql&lt;::diesel::sql_types::Text, ::diesel::pg::Pg&gt;&gt;::from_sql(bytes)?;\n                #ident::from_str(value.as_str())\n                    .map_err(|e| format!(\"Error converting from PgValue {:?}\", e).into())\n            }\n        }\n    };\n\n    // Return the generated code as a TokenStream\n    output.into()\n\nAnother important thing to notice is that this relies in ToString and FromStr traits on the defined Enum allowing the user of the macro, to change the name of the enum according to the name of the enum defined in the Database.\nStep 3: Configure Your Cargo.toml\nTo make your procedural macro crate usable by others, you need to configure your Cargo.toml file. Add the following dependencies:\n[dependencies]\nsyn = \"1.0\"\nquote = \"1.0\"\ndiesel = \"x.x.x\"\n\nReplace \"x.x.x\" with the appropriate version of the Diesel crate. Additionally, specify the proc-macro feature:\n[lib]\nproc-macro = true\n\nThis configuration ensures that your crate can be used as a procedural macro.\nStep 4: Documentation and Examples\nA good procedural macro crate should include documentation and examples to help users understand how to use it. Create a README.md file in your crate's root directory and provide usage instructions, examples, and any necessary information about your procedural macro. For more detail you should follow Cargo Reference here\nConclusion\nCongratulations! You've successfully built the enum_diesel_macros crate, a powerful tool for simplifying enum handling in Rust when using Diesel and PostgreSQL. This procedural macro streamlines the generation of FromSql and ToSql implementations for your enums, making your code cleaner and more efficient.\nNow you have the knowledge to create procedural macros to enhance your Rust development experience with Diesel and PostgreSQL. Happy coding with Rust!\n","id":"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/","title":"Building Diesel Macro for generating FromSql and ToSql derivation on Enum Postgresql types."},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"body":"Part 2\nPart 1: Understanding a Custom Directory Entry Stream in Rust\nToday, let's dive into an interesting implementation of Stream for directory entry iteration in Rust. This implementation showcases several advanced Rust concepts including async/await, state machines, and safe handling of file I/O.\n\nSPOILER ALERT: This implementation will contain a naive implementaion of the stream directory reader, which is not performant because it will create multiple futures. Go to Part 2 to see a more robust implementation.\n\nThe Core Structure\nThe implementation centers around DirEntriesIter, which provides streaming access to directory entries in a custom filesystem format. Here's the key structure:\npub struct DirEntriesIter&lt;'a&gt; {\n    reader: BufReader&lt;File&gt;,\n    position: u64,\n    state: State,\n    // ... other fields\n}\n\nState Machine Pattern\nOne of the most interesting aspects is the use of an explicit state machine through an enum:\nenum State {\n    ReadPosition,\n    ReadFlag,\n    ReadEntryName,\n    ReadContent,\n    ReadPath,\n    Eof,\n}\n\nThis state machine elegantly handles the sequential reading of directory entries, where each entry consists of:\n\nA flag indicating entry type\nA null-terminated entry name\nEither a content hash (32 bytes) or a symlink path\n\nDeep Dive: Implementing a Stream for Directory Entry Headers\nUnderstanding the Context\nBefore diving into the implementation, let's understand what we're working with. We're reading a directory header file that acts as an index - it contains metadata and pointers (hashes) to the actual content files. Each entry in this header file represents:\n\nA flag indicating the entry type\nThe entry name as a null-terminated string\nA 32-byte hash that points to another file containing the actual content\n\nThis structure allows for efficient directory traversal without loading all file contents into memory.\nEntry Structure\npub struct Entry&lt;'a&gt; {\n    name: &amp;'a str,\n    content_file_hash: &amp;'a [u8; 32]\n}\n\nThis simplified structure focuses on two key pieces of information:\n\nname: A string slice representing the entry name\ncontent_file_hash: A 32-byte array slice that contains the hash pointing to the content file\n\nStream Implementation\nHere's the adapted Stream implementation with detailed explanations:\nimpl&lt;'a&gt; Stream for DirEntriesIter&lt;'a&gt; {\n    type Item = Result&lt;Entry&lt;'a&gt;, errors::ReadError&gt;;\n    fn poll_next(mut self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Option&lt;Self::Item&gt;&gt; {\n        let this = self.as_mut().get_mut();\n        loop {\n            match this.state {\n                State::Eof =&gt; {\n                    // End of file reached - terminate stream\n                    return Poll::Ready(None);\n                },\n                State::ReadPosition =&gt; {\n                        // Reset buffers for new entry\n                    this.entry_name.clear();\n                    this.current_buffer_content = [0u8; 32];\n                    // Seek to the next entry position\n                    let future = this.reader.seek(tokio::io::SeekFrom::Start(this.position));\n                    let mut future_mut = std::pin::pin!(future);\n                    match future_mut.as_mut().poll(cx) {\n                        Poll::Ready(Ok()) =&gt; {\n                            this.state = State::ReadFlag;\n                        },\n                        Poll::Ready(Err(e)) =&gt; {\n                            return Poll::Ready(Some(Err(errors::ReadError::from(e))));\n                        },\n                        Poll::Pending =&gt; return Poll::Pending,\n                    }\n                },\n                State::ReadFlag =&gt; {\n                    // Read the entry type flag\n                    let future = this.reader.read_u8();\n                    let mut future_mut = std::pin::pin!(future);\n                    match future_mut.as_mut().poll(cx) {\n                        Poll::Ready(Ok(flag)) =&gt; {\n                            this.flag = flag;\n                            this.state = State::ReadEntryName;\n                        },\n                        Poll::Ready(Err(e)) =&gt; {\n                            return Poll::Ready(Some(Err(errors::ReadError::from(e))));\n                        },\n                        Poll::Pending =&gt; return Poll::Pending,\n                    }\n                },\n                State::ReadEntryName =&gt; {\n                    // Read until null terminator\n                    let future = this.reader.read_until(0x00, &amp;mut this.entry_name);\n                    let mut future_mut = std::pin::pin!(future);\n                    match future_mut.as_mut().poll(cx) {\n                        Poll::Ready(Ok()) =&gt; {\n                            // Remove null terminator\n                            this.entry_name.pop();\n                            this.state = State::ReadContent;\n                        },\n                        Poll::Ready(Err(e)) =&gt; {\n                            return Poll::Ready(Some(Err(errors::ReadError::from(e))));\n                        },\n                        Poll::Pending =&gt; return Poll::Pending,\n                    }\n                },\n                State::ReadContent =&gt; {\n                    // Read the content file hash\n                    let future = this.reader.read_exact(&amp;mut this.current_buffer_content);\n                    let mut future_mut = std::pin::pin!(future);\n                    match future_mut.as_mut().poll(cx) {\n                        Poll::Ready(Ok()) =&gt; {\n                            // Update position for next entry\n                            this.position += this.entry_name.len() as u64 + 33; // name + null + hash\n                            // Convert name bytes to str\n                            let name = std::str::from_utf8(&amp;this.entry_name)\n                                .map_err(|e| errors::ReadError::InvalidUtf8(e))?;\n                            // Create static references\n                            let static_name: &amp;'static str = Box::leak(name.to_string().into_boxed_str());\n                            let static_hash: &amp;'static [u8; 32] = Box::leak(Box::new(this.current_buffer_content));\n                            this.state = State::ReadPosition;\n                            return Poll::Ready(Some(Ok(Entry {\n                                name: static_name,\n                                content_file_hash: static_hash,\n                            })));\n                        },\n                        Poll::Ready(Err(e)) =&gt; {\n                            return Poll::Ready(Some(Err(errors::ReadError::from(e))));\n                        },\n                        Poll::Pending =&gt; return Poll::Pending,\n                    }\n                }\n            }\n        }\n    }\n}\n\nWhy a State Machine?\nThe state machine pattern is crucial here for several reasons:\n\n\nAsync Operation Handling: Each read operation is asynchronous and might not complete immediately. The state machine allows us to:\n\nResume from the correct position when an operation returns Poll::Pending\nMaintain context between async operations\nHandle partial reads correctly\n\n\n\nSequential Operations: Reading an entry requires multiple steps that must happen in order:\n\nSeek to position\nRead flag\nRead name\nRead content hash\nThe state machine ensures these operations happen in sequence while maintaining async compatibility.\n\n\n\nResource Management: The state machine helps manage buffers and intermediate state between async operations, ensuring we don't lose data between polls.\n\n\nThe Header File Structure\nThe file we're reading is a directory header file, which serves as an index or map for the actual content files. Here's how it works:\n\n\nHeader Entry Structure:\n[1 byte flag][variable-length name + null][32 byte content hash]\n\n\n\nContent Hash Purpose: The content_file_hash field is a 32-byte hash that:\n\nActs as a unique identifier for the content file\nCan be used to locate the actual content file in the filesystem\nProvides integrity verification for the content\n\n\n\nBenefits of This Approach:\n\nDirectory operations are fast since they only read metadata\nContent files can be deduplicated (same content = same hash)\nContent can be loaded on-demand rather than all at once\nDirectory structure remains compact\n\n\n\nThis separation of concerns between directory structure and content storage is similar to how modern filesystems handle inodes and data blocks, but using content-addressable storage based on hashes.\nTrade-offs and Considerations\nWhile this implementation works, the main trade-offs that developers should be aware is that when we are returning Poll::Pending, the next call to poll_next will again create a future if the previous future has not been complete. This could lead to Memory leaks and performance issue if the file is too big.\nWe will treat a technique to solve this issue in the second part of this serie.\nConclusion\nIn this first part of our tutorial, we explored the foundational concepts behind implementing a custom directory entry stream in Rust. We examined the structure of our DirEntriesIter and the state machine pattern that facilitates asynchronous reading of directory entries. \nBy leveraging Rust's powerful type system and async capabilities, we created a solution that handles directory traversal. However, we also highlighted trade-offs, particularly regarding performance and memory management when dealing with large files.\nIn the upcoming second part, we will address these performance concerns and introduce a more robust implementation that minimizes the creation of multiple futures, ensuring a more efficient and reliable directory stream. Stay tuned for further insights and enhancements to our Rust directory stream implementation!\n","id":"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/","title":"Part 1: Implementing a Directory Entry Stream in Rust"},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"body":"Part 2: Optimizing the Directory Entry Stream in Rust\nIn the first part of our blog post, we explored the implementation of a custom directory entry stream in Rust. While the initial implementation effectively utilized a state machine to handle asynchronous operations, it had a drawback: it created new futures on every poll, which could lead to performance issues.\nIn this part, we will improve the stream implementation by reusing futures, thus minimizing the overhead associated with creating new futures repeatedly. This optimization will enhance the performance of our stream, especially when dealing with large directories.\nThe Problem with Creating New Futures\nIn the original implementation, each time the state machine transitioned to a new state, a new future was created. This approach can lead to excessive allocations and increased pressure on the memory allocator, particularly in high-throughput scenarios. Instead, we can maintain a single future for each state and reuse it as needed.\nUpdated Code Implementation\nHere’s the revised implementation of the DirEntriesIter stream that incorporates these optimizations:\n// State machine states for iterating through directory entries\nenum State {\n    ReadPosition,\n    ReadFlag,\n    ReadEntryName,\n    ReadContent,\n    Eof,\n    WaitingReadPosition(Pin&lt;Box&lt;dyn Future&lt;Output = Result&lt;u64, std::io::Error&gt;&gt;&gt;&gt;),\n    WaitingReadFlag(Pin&lt;Box&lt;dyn Future&lt;Output = Result&lt;u8, std::io::Error&gt;&gt;&gt;&gt;),\n    WaitingReadEntryName(Pin&lt;Box&lt;dyn Future&lt;Output = Result&lt;Vec&lt;u8&gt;, std::io::Error&gt;&gt;&gt;&gt;),\n    WaitingReadContent(Pin&lt;Box&lt;dyn Future&lt;Output = Result&lt;[u8; 32], std::io::Error&gt;&gt;&gt;&gt;),\n}\n\n// Iterator over entries in a B3 directory\npub struct DirEntriesIter&lt;'a&gt; {\n    reader: Arc&lt;RwLock&lt;BufReader&lt;File&gt;&gt;&gt;,\n    position: u64,\n    state: State,\n    entry_name: Vec&lt;u8&gt;,\n    flag: u8,\n    _marker: std::marker::PhantomData&lt;&amp;'a ()&gt;,\n}\n\nimpl&lt;'a&gt; DirEntriesIter&lt;'a&gt; {\n    pub async fn new(reader: File, position_start_entries: u64) -&gt; Result&lt;Self, errors::ReadError&gt; {\n        let mut reader = BufReader::new(reader);\n        Ok(Self {\n            reader: Arc::new(RwLock::new(reader)),\n            position: position_start_entries,\n            state: State::ReadPosition,\n            entry_name: Vec::new(),\n            flag: 0,\n            _marker: std::marker::PhantomData,\n        })\n    }\n}\n\nimpl&lt;'a&gt; Stream for DirEntriesIter&lt;'a&gt; {\n    type Item = Result&lt;BorrowedEntry&lt;'a&gt;, errors::ReadError&gt;;\n\n    fn poll_next(mut self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Option&lt;Self::Item&gt;&gt; {\n        let this = self.as_mut().get_mut();\n\n        match this.state {\n            State::Eof =&gt; Poll::Ready(None), // End of stream\n\n            // Step 1: ReadPosition\n            State::ReadPosition =&gt; {\n                this.entry_name.clear();\n                this.flag = 0;\n                let file = this.reader.clone();\n                let pos = this.position;\n                let waker = cx.waker().clone();\n\n                // Create a future to seek to the next entry position\n                let future = async move {\n                    let result = file.write().await.seek(tokio::io::SeekFrom::Start(pos)).await;\n                    waker.wake();\n                    result\n                };\n                this.state = State::WaitingReadPosition(Box::pin(future)); // Transition to WaitingReadPosition\n                cx.waker().wake_by_ref();\n                Poll::Pending // Indicate that the operation is pending\n            },\n\n            // Step 2: WaitingReadPosition\n            State::WaitingReadPosition(ref mut future) =&gt; {\n                let result = future.as_mut().poll(cx); // Poll the future\n                on_future!(this, result, State::Eof, |r| {\n                    this.state = State::ReadFlag; // Transition to ReadFlag\n                    cx.waker().wake_by_ref();\n                    Poll::Pending\n                })\n            },\n\n            // Step 3: ReadFlag\n            State::ReadFlag =&gt; {\n                let file = this.reader.clone();\n                let waker = cx.waker().clone();\n                // Create a future to read the entry type flag\n                let future = async move {\n                    let result = file.write().await.read_u8().await\n                    waker.wake();\n                    result\n                };\n                this.state = State::WaitingReadFlag(Box::pin(future)); // Transition to WaitingReadFlag\n                cx.waker().wake_by_ref();\n                Poll::Pending\n            },\n\n            // Step 4: WaitingReadFlag\n            State::WaitingReadFlag(ref mut future) =&gt; {\n                let result = future.as_mut().poll(cx); // Poll the future\n                on_future!(this, result, State::Eof, |r| {\n                    this.state = State::ReadEntryName; // Transition to ReadEntryName\n                    this.flag = r; // Store the flag value\n                    cx.waker().wake_by_ref();\n                    Poll::Pending\n                })\n            },\n\n            // Step 5: ReadEntryName\n            State::ReadEntryName =&gt; {\n                let file = this.reader.clone();\n                let waker = cx.waker().clone();\n                // Create a future to read the entry name until the null terminator\n                let future = async move {\n                    let mut buffer = Vec::new();\n                    file.write().await.read_until(0x00, &amp;mut buffer).await?;\n                    waker.wake();\n                    Ok(buffer)\n                };\n                this.state = State::WaitingReadEntryName(Box::pin(future)); // Transition to WaitingReadEntryName\n                cx.waker().wake_by_ref();\n                Poll::Pending\n            },\n\n            // Step 6: WaitingReadEntryName\n            State::WaitingReadEntryName(ref mut future) =&gt; {\n                let result = future.as_mut().poll(cx); // Poll the future\n                on_future!(this, result, State::Eof, |r| {\n                    this.state = State::ReadContent; // Set the next state\n                    this.entry_name = r; // Store the entry name\n                    this.entry_name.pop(); // Remove the null terminator\n                    cx.waker().wake_by_ref();\n                    Poll::Pending\n                })\n            },\n\n            // Step 7: ReadContent\n            State::ReadContent =&gt; {\n                let file = this.reader.clone();\n                let waker = cx.waker().clone();\n                // Create a future to read the content hash\n                let future = async move {\n                    let mut buffer = [0u8; 32];\n                    file.write().await.read_exact(&amp;mut buffer).await?;\n                    waker.wake();\n                    Ok(buffer)\n                };\n                this.state = State::WaitingReadContent(Box::pin(future)); // Transition to WaitingReadContent\n                cx.waker().wake_by_ref();\n                Poll::Pending\n            },\n\n            // Step 8: WaitingReadContent\n            State::WaitingReadContent(ref mut fut) =&gt; {\n                let result = fut.as_mut().poll(cx); // Poll the future\n                on_future!(this, result, State::Eof, |buffer_content: [u8; 32]| {\n                    this.state = State::ReadPosition; // Transition back to ReadPosition\n                    this.position += this.entry_name.len() as u64 + buffer_content.len() as u64 + 2; // Update position\n                    let static_slice: &amp;'static [u8; 32] = unsafe { mem::transmute_copy(&amp;buffer_content) };\n                    Poll::Ready(Some(Ok(BorrowedEntry {\n                        name: Box::leak(this.entry_name.clone().into_boxed_slice()),\n                        link: BorrowedLink::Content(static_slice),\n                    })))\n                })\n            },\n        }\n    }\n}\n\nKey Changes Explained\n\n\nState Management: The state machine now includes states for waiting on futures, which allows us to keep track of the current operation without creating new futures unnecessarily.\n\n\nFuture Reuse: Instead of creating a new future for each operation, we create a future only when entering a waiting state. This reduces the number of allocations and improves performance.\n\n\nCleaner Polling Logic: The polling logic is streamlined, making it easier to follow the flow of operations and transitions between states.\n\n\nExplanation of the poll_next Function\nStep-by-Step Transition\n\n\nReadPosition: The stream starts in the ReadPosition state, where it clears the entry name and resets the flag. It creates a future to seek to the next entry position and transitions to WaitingReadPosition.\n\n\nWaitingReadPosition: In this state, the future created in the previous step is polled. If the operation is complete, it transitions to ReadFlag.\n\n\nReadFlag: The stream reads the entry type flag by creating a new future. It transitions to WaitingReadFlag.\n\n\nWaitingReadFlag: The future is polled here. If successful, it transitions to ReadEntryName.\n\n\nReadEntryName: The stream reads the entry name until the null terminator, creating a future for this operation. It transitions to WaitingReadEntryName.\n\n\nWaitingReadEntryName: The future is polled. Depending on the flag, it transitions to ReadContent.\n\n\nReadContent: If the entry is not a symlink, the stream reads the content hash, creating a future for this operation. It transitions to WaitingReadContent.\n\n\nWaitingReadContent: The future is polled. If successful, it transitions back to ReadPosition.\n\n\nUse of Waker\nThe waker is a mechanism that allows the asynchronous runtime to notify the task when it is ready to make progress. In this implementation, the waker is used to wake the task when the future completes. This is crucial for ensuring that the stream can continue processing without blocking the entire thread.\nConclusion\nBy optimizing the stream implementation to reuse futures and clearly defining the transitions between states, we have significantly improved its performance. This change not only reduces memory allocations but also enhances the overall efficiency of the directory entry stream. In future posts, we will explore additional enhancements and features that can be added to this implementation, such as error recovery and performance tuning.\nStay tuned for more insights into Rust programming and systems design!\n","id":"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/","title":"Part 2: Optimizing the Directory Entry Stream in Rust"}},"docInfo":{"https://jproyo.github.io/":{"body":0,"title":0},"https://jproyo.github.io/posts/":{"body":0,"title":1},"https://jproyo.github.io/posts/2019-02-07-practical-tagless-final-in-scala/":{"body":2093,"title":5},"https://jproyo.github.io/posts/2019-03-17-tagless-final-haskell/":{"body":1023,"title":4},"https://jproyo.github.io/posts/2021-03-17-encoding-effects-with-freer-simple/":{"body":1813,"title":5},"https://jproyo.github.io/posts/2023-09-06-diesel-sqltype-enum-pg-macro/":{"body":532,"title":10},"https://jproyo.github.io/posts/2024-10-29-implementing-directory-stream-in-rust/":{"body":703,"title":7},"https://jproyo.github.io/posts/2024-11-05-implementing-directory-stream-in-rust-part-2/":{"body":675,"title":7}},"length":8},"lang":"English"};